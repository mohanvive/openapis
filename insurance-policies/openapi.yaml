openapi: 3.0.3
info:
  title: Insurance Policy API
  version: 1.0.0
  description: >
    APIs to manage insurance policies for an Insurance firm.
    Supports operations for policy creation, retrieval, updates, renewals, and cancellations.

servers:
  - url: https://api.all.com/v1
    description: Production server

tags:
  - name: Policies
    description: Operations related to insurance policies
  - name: Quotes
    description: Operations related to insurance quotes
  - name: Policyholders
    description: Manage policyholder information

paths:
  /policies:
    get:
      tags: [Policies]
      summary: List all policies
      operationId: listPolicies
      parameters:
        - name: customerId
          in: query
          schema:
            type: string
          description: Filter policies by customer ID
        - name: policyType
          in: query
          schema:
            type: string
            enum: [Auto, Home, Life, Health]
          description: Filter by policy type
      responses:
        '200':
          description: A list of policies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PolicySummary'
    post:
      tags: [Policies]
      summary: Create a new insurance policy
      operationId: createPolicy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPolicyRequest'
      responses:
        '201':
          description: Policy created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'

  /policies/{policyId}:
    get:
      tags: [Policies]
      summary: Retrieve a specific policy
      operationId: getPolicyById
      parameters:
        - name: policyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Policy details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
        '404':
          description: Policy not found
    put:
      tags: [Policies]
      summary: Update an existing policy
      operationId: updatePolicy
      parameters:
        - name: policyId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyUpdateRequest'
      responses:
        '200':
          description: Policy updated successfully
    delete:
      tags: [Policies]
      summary: Cancel a policy
      operationId: cancelPolicy
      parameters:
        - name: policyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Policy canceled successfully
          content: {}

  /quotes:
    post:
      tags: [Quotes]
      summary: Generate a new insurance quote
      operationId: createQuote
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuoteRequest'
      responses:
        '201':
          description: Quote generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuoteResponse'

  /policyholders:
    get:
      tags: [Policyholders]
      summary: List all policyholders
      operationId: listPolicyholders
      responses:
        '200':
          description: List of policyholders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PolicyholderSummary'
    post:
      tags: [Policyholders]
      summary: Register a new policyholder
      operationId: createPolicyholder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPolicyholderRequest'
      responses:
        '201':
          description: Policyholder created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policyholder'

components:
  schemas:
    PolicySummary:
      type: object
      properties:
        policyId:
          type: string
        policyType:
          type: string
          enum: [Auto, Home, Life, Health]
        status:
          type: string
          enum: [Active, Pending, Canceled, Expired]
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date

    Policy:
      type: object
      allOf:
        - $ref: '#/components/schemas/PolicySummary'
        - type: object
          properties:
            premium:
              type: number
              format: double
            policyholder:
              $ref: '#/components/schemas/PolicyholderSummary'
            coverageDetails:
              type: array
              items:
                $ref: '#/components/schemas/CoverageItem'

    NewPolicyRequest:
      type: object
      required: [policyType, policyholderId, coverageDetails]
      properties:
        policyType:
          type: string
          enum: [Auto, Home, Life, Health]
        policyholderId:
          type: string
        coverageDetails:
          type: array
          items:
            $ref: '#/components/schemas/CoverageItem'
        startDate:
          type: string
          format: date

    PolicyUpdateRequest:
      type: object
      properties:
        coverageDetails:
          type: array
          items:
            $ref: '#/components/schemas/CoverageItem'
        endDate:
          type: string
          format: date

    CoverageItem:
      type: object
      properties:
        type:
          type: string
          description: Type of coverage
        amount:
          type: number
          format: double
        deductible:
          type: number
          format: double

    PolicyholderSummary:
      type: object
      properties:
        policyholderId:
          type: string
        name:
          type: string
        email:
          type: string

    Policyholder:
      type: object
      allOf:
        - $ref: '#/components/schemas/PolicyholderSummary'
        - type: object
          properties:
            address:
              type: string
            phoneNumber:
              type: string
            dateOfBirth:
              type: string
              format: date

    NewPolicyholderRequest:
      type: object
      required: [name, email]
      properties:
        name:
          type: string
        email:
          type: string
        address:
          type: string
        phoneNumber:
          type: string
        dateOfBirth:
          type: string
          format: date

    QuoteRequest:
      type: object
      required: [policyType, customerDetails, coverageDetails]
      properties:
        policyType:
          type: string
          enum: [Auto, Home, Life, Health]
        customerDetails:
          $ref: '#/components/schemas/CustomerDetails'
        coverageDetails:
          type: array
          items:
            $ref: '#/components/schemas/CoverageItem'

    QuoteResponse:
      type: object
      properties:
        quoteId:
          type: string
        estimatedPremium:
          type: number
          format: double
        validUntil:
          type: string
          format: date

    CustomerDetails:
      type: object
      properties:
        name:
          type: string
        age:
          type: integer
        address:
          type: string
        drivingHistory:
          type: string
